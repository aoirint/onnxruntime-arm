name: build
on:
  push:
    branches:
      - main
  # release:
  #   types:
  #     - published

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/onnxruntime-arm-build
      PLATFORM: linux/arm32v7
      BASE_IMAGE: arm32v7/python:3.7.12-buster
      ONNXRUNTIME_VERSION: v1.8.2
      # add --arm for gcc-8: https://github.com/microsoft/onnxruntime/issues/4189
      # skip test: https://github.com/microsoft/onnxruntime/issues/2436
      BUILD_OPTS: --config Release --parallel --update --build --build_shared_lib

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            ONNXRUNTIME_VERSION=${{ env.ONNXRUNTIME_VERSION }}
          # target: ${{ matrix.target }}
          platforms: ${{ env.PLATFORM }}
          load: true
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.IMAGE_TAG }}-buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_TAG }}-buildcache,mode=max

      - name: Build ONNX Runtime
        run: |
          docker run --rm \
            -v "${PWD}/build:/onnxruntime/build" \
            --platform "${{ env.PLATFORM }}" \
            -e "CC=gcc-7" \
            -e "CXX=g++-7" \
            ${{ env.IMAGE_NAME }} bash ./build.sh ${{ env.BUILD_OPTS }}

      - name: Organize artifact
        run: |
          mkdir artifact
          cp build/Linux/Release/libonnxruntime* artifact/

      # Upload
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: artifact/*
          retention-days: 7
